{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","servises/apiService.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/App/App.js","reportWebVitals.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchName","setSearchName","className","event","preventDefault","trim","alert","type","name","value","onChange","currentTarget","toLowerCase","placeholder","apiService","page","axios","get","then","response","data","hits","ImageGalleryItem","id","webformatURL","tags","largeImageURL","onOpenModal","s","onClick","src","alt","data-source","ImageGalleryItemImage","ImageGallery","images","map","image","modalRoot","document","querySelector","Modal","onClose","isFirstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","Overlay","target","Button","App","setImages","setPage","loading","setLoading","showModal","setShowModal","setLargeImageURL","state","scrollGalerey","catch","error","console","log","finally","handleLoadeMore","prevPage","toggleModal","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","length","dataset","source","color","height","width","timeout","style","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c069e6db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1WttX\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2W5JG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3_IRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__TWmEa\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../Searchbar/Searchbar.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchName, setSearchName] = useState('');\r\n  // state = {\r\n  //   searchName: '',\r\n  // };\r\n\r\n  const handleNameChange = event => {\r\n    setSearchName(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (searchName.trim() === '') {\r\n      alert('Введите название искомого объекта');\r\n      return;\r\n    }\r\n    onSubmit(searchName);\r\n    setSearchName('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          name=\"searchName\"\r\n          value={searchName}\r\n          onChange={handleNameChange}\r\n          type=\"text\"\r\n          // autocomplete=\"off\"\r\n          // autofocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import axios from 'axios';\r\n\r\n// function apiService(searchName, page) {\r\n//   return fetch(\r\n//     `https://pixabay.com/api/?q=${searchName}&page=${page}&key=19032313-4dd4b1c57c2e902bf9f549139&image_type=photo&orientation=horizontal&per_page=12`,\r\n//   ).then(response => {\r\n//     if (response.ok) {\r\n//       return response.data.hits;\r\n//     }\r\n//     return Promise.reject(new Error('Something is wrong, please try again'));\r\n//   });\r\n// }\r\n\r\n// export default apiService;\r\n\r\nconst apiService = (searchName, page) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchName}&page=${page}&key=19032313-4dd4b1c57c2e902bf9f549139&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\nexport default apiService;\r\n","// import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../ImageGalleryItem/ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem({\r\n  id,\r\n  webformatURL,\r\n  tags,\r\n  largeImageURL,\r\n  onOpenModal,\r\n}) {\r\n  // const { id, webformatURL, tags, largeImageURL, onOpenModal } = this.props;\r\n\r\n  return (\r\n    <li className={s.ImageGalleryItem} key={id}>\r\n      <img\r\n        onClick={onOpenModal}\r\n        src={webformatURL}\r\n        alt={tags}\r\n        data-source={largeImageURL}\r\n        className={s.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n};\r\n","// import { Component } from 'react';\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\n// import apiService from '../../services/apiService';\r\n// import Button from '../Button/Button';\r\n\r\nimport s from '../ImageGallery/ImageGallery.module.css';\r\n\r\nexport default function ImageGallery({ images, onOpenModal }) {\r\n  // const { images, handleLoadeMore,onOpenModal } = this.props;\r\n  return (\r\n    <>\r\n      <ul className={s.ImageGallery}>\r\n        {images.map(image => (\r\n          <ImageGalleryItem\r\n            key={image.id}\r\n            webformatURL={image.webformatURL}\r\n            tags={image.tags}\r\n            largeImageURL={image.largeImageURL}\r\n            onOpenModal={onOpenModal}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../Modal/Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ largeImageURL, onClose }) {\r\n  // const componentDidMount() {\r\n  //   window.addEventListener('keydown', this.handleKeyDown);\r\n  // }\r\n\r\n  // const componentWillUnmount() {\r\n  //   window.removeEventListener('keydown', this.handleKeyDown);\r\n  // }\r\n  const isFirstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      window.addEventListener('keydown', handleKeyDown);\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  // const { largeImageURL } = this.props;\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>\r\n        <img src={largeImageURL} alt=\"\" className={s.ImageGalleryItemImage} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\n/* <img src={src} alt={alt} className={s.ImageGalleryItemImage} />; */\r\n","import s from '../Button/Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button onClick={onClick} className={s.Button}>\r\n      Loade more\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Searchbar from '../Searchbar/Searchbar';\nimport apiService from '../../servises/apiService';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Modal from '../Modal/Modal';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport Button from '../Button/Button';\n\nexport default function App() {\n  const [searchName, setSearchName] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  // state = {\n  //   searchName: '',\n  //   images: [],\n  //   page: 1,\n  //   loading: false,\n  //   showModal: false,\n  //   largeImageURL: '',\n  // };\n\n  useEffect(() => {\n    if (searchName === '') {\n      return;\n    }\n\n    setLoading(true);\n\n    apiService(searchName, page)\n      .then(images => {\n        setImages(state => [...state, ...images]);\n        scrollGalerey();\n      })\n      // apiService\n      //   .fetchImagesWithQuery(searchName, page)\n      //   .then(response => {\n      //     setImages(images => [...images, ...response]);\n      //   })\n      .catch(error => console.log(error))\n      .finally(() => setLoading(false));\n  }, [searchName, page]);\n\n  /////////////////////// проверяем изменение запроса\n  // componentDidUpdate(prevProps, prevState) {\n  //   const prevName = prevState.searchName;\n  //   const nextName = this.state.searchName;\n\n  //   if (prevName !== nextName) {\n  //     console.log('изменился запрос');\n  //     this.setState({ loading: true });\n\n  //     this.fetchImages();\n  //   }\n\n  // if (prevState.page !== this.state.page) {\n  //   window.scrollTo({\n  //     top: document.documentElement.scrollHeight,\n  //     behavior: 'smooth',\n  //   });\n  // }\n  // }\n\n  /////////////////////////записывает из формы значение иcкомого в state\n  const handleFormSubmit = searchName => {\n    setSearchName(searchName);\n    setPage(1);\n    setImages([]);\n    setLoading(true);\n    // this.setState({ searchName: searchName, page: 1, images: [] });\n  };\n\n  ///////////////////////////////////Api\n\n  // function fetchImages() {\n  //   if (searchName === '') {\n  //     return;\n  //   }\n\n  //   setLoading(true);\n\n  //   apiService\n  //     .fetchImagesWithQuery(searchName)\n  //     .then(response => {\n  //       setImages([...images, ...response.hits]);\n  //       // setPage(page + 1);\n  //     })\n  //     .catch(error => console.log(error))\n  //     .finally(() => setLoading(false));\n  // }\n  //////////////////////////////////////////\n  // toggleLoader = () => {\n  //   this.setState(({ loading }) => ({ loading: !loading }));\n  // };\n\n  ////////////////////////// loade more\n  const handleLoadeMore = () => {\n    // fetchImages();-----------------\n    setLoading(true);\n    setPage(prevPage => prevPage + 1);\n    scrollGalerey();\n  };\n\n  ////////////////////////////////\n  const onOpenModal = e => {\n    setLargeImageURL(e.target.dataset.source);\n    // this.setState({ largeImageURL: e.target.dataset.source });\n    toggleModal();\n  };\n\n  ///////////////////////////////change modal\n  const toggleModal = () => {\n    setShowModal(!showModal);\n    // this.setState(({ showModal }) => ({\n    //   showModal: !showModal,\n    // }));\n  };\n  ////////////////////////////////////////\n\n  const scrollGalerey = () => {\n    setTimeout(() => {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }, 1000);\n  };\n  /////////////////////////////////////////////\n\n  // const { images, showModal, largeImageURL, loading } = this.state;\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n\n      {images.length > 0 && (\n        <ImageGallery\n          images={images}\n          handleLoadeMore={handleLoadeMore}\n          onOpenModal={onOpenModal}\n        />\n      )}\n\n      {loading && (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n          style={{ textAlign: 'center' }}\n        />\n      )}\n\n      {!loading && images.length > 11 && <Button onClick={handleLoadeMore} />}\n\n      {showModal && (\n        <Modal onClose={toggleModal} largeImageURL={largeImageURL} />\n      )}\n    </div>\n  );\n}\n\n// onToggleModal={this.toggleModal}\n//             largeImageURL={this.state.largeImageURL}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1hRUj\",\"Modal\":\"Modal_Modal__1LPAU\",\"ImageGalleryItemImage\":\"Modal_ImageGalleryItemImage__12mNG\"};"],"sourceRoot":""}